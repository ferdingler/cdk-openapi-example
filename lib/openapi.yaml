openapi: "3.0.2"
info:
  title: Library API
  version: "1.0"

servers:
  - url: http://localhost:8080

paths:
  /book:
    post:
      description: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBookRequest"
      responses:
        "200":
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiLambda.Arn}/invocations
        httpMethod: POST
        passthroughBehavior: never

components:
  schemas:
    CreateBookRequest:
      type: object
      description: Request object to create a book
      properties:
        bookName:
          type: string
        author:
          type: string
        ISBN:
          type: string
      required:
        - "bookName"
        - "ISBN"

    Book:
      type: object
      description: Represents a book
      properties:
        bookName:
          type: string
        author:
          type: string
        ISBN:
          type: string

x-amazon-apigateway-request-validator: all
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true

x-amazon-apigateway-gateway-responses:
  # Provide more detailed error message for bad request body errors.
  # https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-gateway-responses.html
  BAD_REQUEST_BODY:
    responseTemplates:
      application/json: '{"errorCode": "BadRequestBody", "message": "$context.error.validationErrorString"}'
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
